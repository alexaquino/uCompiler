
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightEQrightEQUALSleftNEQleftLTLEGTGEleftPLUSMINUSleftTIMESDIVIDEleftLPARENRPARENARRAY BEGIN CASE CONST DIV DO DOWNTO ELSE END FILE FOR FUNCTION GOTO IF IN LABEL NIL NOT OF PACKED AND OR RECORD REPEAT SET THEN TO TYPE UNTIL VAR PROCEDURE PROGRAM WHILE WITH MOD PLUS MINUS TIMES DIVIDE EQUALS LT LE GT GE EQ NEQ LPAREN RPAREN LBRACKET RBRACKET POINT COMMA SEMICOLON COLON INTEGER REAL NUMBER STRING BOOLEAN IDprogram : PROGRAM ID SEMICOLON block POINTblock : labelDecl constDecl varDecl BEGIN procDecl functDecl statement ENDlabelDecl : LABEL NUMBER SEMICOLONlabelDecl : emptyconstDecl : emptyconstDecl : CONST constAssignmentList SEMICOLONconstAssignmentList : ID EQ INTEGERconstAssignmentList : ID EQ REALconstAssignmentList : ID EQ STRINGconstAssignmentList : ID EQ NUMBERconstAssignmentList : ID EQ BOOLEANtypeDefinition : emptytypeDefinition : INTEGERtypeDefinition : REALtypeDefinition : STRINGtypeDefinition : BOOLEANvarDecl : emptyvarDecl : VAR identList COLON typeDefinition SEMICOLON identList_2identList : IDidentList : identList COMMA IDidentList_2 : emptyidentList_2 : identList COLON typeDefinition SEMICOLON identList_2procDecl : PROCEDURE ID LPAREN parameters RPAREN SEMICOLON block SEMICOLONprocDecl : emptyfunctDecl : emptyfunctDecl : FUNCTION ID LPAREN parameters RPAREN COLON typeDefinition SEMICOLON block SEMICOLONparameterList : emptyparameters : parameterListparameterList : parameterList SEMICOLON parameterparameterList : parameterparameter : ID COLON typeDefinitionparameter : ID COMMA parameterparameter : COLON typeDefinitionstatement : emptystatement : statement ID EQUALS expression SEMICOLONstatement : BEGIN statementList ENDstatement : statement IF condition THEN statementstatement : statement IF condition THEN statement ELSE statementstatement : WHILE condition DO statementstatementList : statementstatementList : statementList SEMICOLON statementcondition : expression relation expressionrelation : EQUALSrelation : LTrelation : LErelation : GTrelation : GErelation : EQrelation : NEQexpression : termexpression : addOperator termexpression : expression addOperator termaddOperator : PLUSaddOperator : MINUSterm : factorterm : term multOperator factormultOperator : TIMESmultOperator : DIVIDEfactor : IDfactor : REALfactor : INTEGERfactor : LPAREN expression RPARENfactor : NUMBERfactor : BOOLEANempty :'
    
_lr_action_items = {'REAL':([21,33,48,58,64,65,67,71,75,84,85,86,89,90,91,92,93,94,95,96,97,99,105,106,121,],[25,39,56,56,-53,56,-54,56,39,-57,-58,56,-45,-47,-48,-43,-44,-46,56,56,-49,56,39,39,39,]),'DO':([56,57,59,60,61,62,63,68,88,109,110,111,112,],[-60,-50,-61,-63,-59,-64,-55,98,-51,-56,-62,-42,-52,]),'CONST':([4,5,7,19,116,130,],[-65,9,-4,-3,-65,-65,]),'THEN':([56,57,59,60,61,62,63,88,100,109,110,111,112,],[-60,-50,-61,-63,-59,-64,-55,-51,115,-56,-62,-42,-52,]),'NUMBER':([6,21,48,58,64,65,67,71,84,85,86,89,90,91,92,93,94,95,96,97,99,],[12,27,60,60,-53,60,-54,60,-57,-58,60,-45,-47,-48,-43,-44,-46,60,60,-49,60,]),'LABEL':([4,116,130,],[6,6,6,]),'WHILE':([22,30,31,36,37,47,83,98,115,127,128,133,],[-65,-65,-24,48,-25,48,48,48,48,48,-23,-26,]),'PROGRAM':([0,],[2,]),'MINUS':([48,56,57,58,59,60,61,62,63,66,71,87,88,89,90,91,92,93,94,95,97,99,109,110,111,112,114,],[67,-60,-50,67,-61,-63,-59,-64,-55,67,67,67,-51,-45,-47,-48,-43,-44,-46,67,-49,67,-56,-62,67,-52,67,]),'DIVIDE':([56,57,59,60,61,62,63,88,109,110,112,],[-60,85,-61,-63,-59,-64,-55,85,-56,-62,85,]),'BEGIN':([4,5,7,10,11,16,18,19,20,22,30,31,36,37,47,52,79,80,83,98,115,116,125,127,128,129,130,133,],[-65,-65,-4,-65,-5,22,-17,-3,-6,-65,-65,-24,47,-25,47,-65,-18,-21,47,47,47,-65,-65,47,-23,-22,-65,-26,]),'LE':([56,57,59,60,61,62,63,66,88,109,110,112,],[-60,-50,-61,-63,-59,-64,-55,89,-51,-56,-62,-52,]),'RPAREN':([39,40,42,43,44,51,53,56,57,59,60,61,62,63,72,73,74,75,76,81,87,88,103,105,109,110,112,117,118,119,],[-14,-15,-16,-13,-12,-65,-65,-60,-50,-61,-63,-59,-64,-55,101,-28,-27,-65,-30,107,110,-51,-33,-65,-56,-62,-52,-29,-32,-31,]),'SEMICOLON':([3,12,14,25,26,27,28,29,33,39,40,41,42,43,44,47,50,51,53,54,55,56,57,59,60,61,62,63,69,73,74,75,76,82,83,88,98,101,103,105,106,108,109,110,112,113,114,115,117,118,119,120,121,122,123,124,126,127,131,132,],[4,19,20,-8,-9,-10,-11,-7,-65,-14,-15,52,-16,-13,-12,-65,-34,-65,-65,83,-40,-60,-50,-61,-63,-59,-64,-55,-2,102,-27,-65,-30,-36,-65,-51,-65,116,-33,-65,-65,-41,-56,-62,-52,-39,122,-65,-29,-32,-31,125,-65,-35,-37,128,130,-65,-38,133,]),'POINT':([8,69,],[13,-2,]),'PLUS':([48,56,57,58,59,60,61,62,63,66,71,87,88,89,90,91,92,93,94,95,97,99,109,110,111,112,114,],[64,-60,-50,64,-61,-63,-59,-64,-55,64,64,64,-51,-45,-47,-48,-43,-44,-46,64,-49,64,-56,-62,64,-52,64,]),'LT':([56,57,59,60,61,62,63,66,88,109,110,112,],[-60,-50,-61,-63,-59,-64,-55,93,-51,-56,-62,-52,]),'COLON':([23,24,45,51,53,77,78,102,104,107,],[33,-19,-20,75,75,105,106,75,75,121,]),'COMMA':([23,24,45,77,78,],[34,-19,-20,104,34,]),'NEQ':([56,57,59,60,61,62,63,66,88,109,110,112,],[-60,-50,-61,-63,-59,-64,-55,97,-51,-56,-62,-52,]),'$end':([1,13,],[0,-1,]),'FUNCTION':([22,30,31,128,],[-65,35,-24,-23,]),'GT':([56,57,59,60,61,62,63,66,88,109,110,112,],[-60,-50,-61,-63,-59,-64,-55,94,-51,-56,-62,-52,]),'END':([22,30,31,36,37,47,49,50,54,55,82,83,98,108,113,115,122,123,127,128,131,133,],[-65,-65,-24,-65,-25,-65,69,-34,82,-40,-36,-65,-65,-41,-39,-65,-35,-37,-65,-23,-38,-26,]),'STRING':([21,33,75,105,106,121,],[26,40,40,40,40,40,]),'EQUALS':([56,57,59,60,61,62,63,66,70,88,109,110,112,],[-60,-50,-61,-63,-59,-64,-55,92,99,-51,-56,-62,-52,]),'ELSE':([50,82,98,113,115,122,123,127,131,],[-34,-36,-65,-39,-65,-35,127,-65,-38,]),'GE':([56,57,59,60,61,62,63,66,88,109,110,112,],[-60,-50,-61,-63,-59,-64,-55,90,-51,-56,-62,-52,]),'LPAREN':([38,46,48,58,64,65,67,71,84,85,86,89,90,91,92,93,94,95,96,97,99,],[51,53,58,58,-53,58,-54,58,-57,-58,58,-45,-47,-48,-43,-44,-46,58,58,-49,58,]),'INTEGER':([21,33,48,58,64,65,67,71,75,84,85,86,89,90,91,92,93,94,95,96,97,99,105,106,121,],[29,43,59,59,-53,59,-54,59,43,-57,-58,59,-45,-47,-48,-43,-44,-46,59,59,-49,59,43,43,43,]),'VAR':([4,5,7,10,11,19,20,116,130,],[-65,-65,-4,17,-5,-3,-6,-65,-65,]),'TIMES':([56,57,59,60,61,62,63,88,109,110,112,],[-60,84,-61,-63,-59,-64,-55,84,-56,-62,84,]),'EQ':([15,56,57,59,60,61,62,63,66,88,109,110,112,],[21,-60,-50,-61,-63,-59,-64,-55,91,-51,-56,-62,-52,]),'ID':([2,9,17,22,30,31,32,34,35,36,37,47,48,49,50,51,52,53,55,58,64,65,67,71,82,83,84,85,86,89,90,91,92,93,94,95,96,97,98,99,102,104,108,113,115,122,123,125,127,128,131,133,],[3,15,24,-65,-65,-24,38,45,46,-65,-25,-65,61,70,-34,77,24,77,70,61,-53,61,-54,61,-36,-65,-57,-58,61,-45,-47,-48,-43,-44,-46,61,61,-49,-65,61,77,77,70,70,-65,-35,70,24,-65,-23,70,-26,]),'PROCEDURE':([22,],[32,]),'IF':([22,30,31,36,37,47,49,50,55,82,83,98,108,113,115,122,123,127,128,131,133,],[-65,-65,-24,-65,-25,-65,71,-34,71,-36,-65,-65,71,71,-65,-35,71,-65,-23,71,-26,]),'BOOLEAN':([21,33,48,58,64,65,67,71,75,84,85,86,89,90,91,92,93,94,95,96,97,99,105,106,121,],[28,42,62,62,-53,62,-54,62,42,-57,-58,62,-45,-47,-48,-43,-44,-46,62,62,-49,62,42,42,42,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'relation':([66,],[95,]),'labelDecl':([4,116,130,],[5,5,5,]),'procDecl':([22,],[30,]),'parameters':([51,53,],[72,81,]),'statementList':([47,],[54,]),'program':([0,],[1,]),'statement':([36,47,83,98,115,127,],[49,55,108,113,123,131,]),'factor':([48,58,65,71,86,95,96,99,],[63,63,63,63,109,63,63,63,]),'addOperator':([48,58,66,71,87,95,99,111,114,],[65,65,96,65,96,65,65,96,96,]),'functDecl':([30,],[36,]),'parameter':([51,53,102,104,],[76,76,117,118,]),'empty':([4,5,10,22,30,33,36,47,51,52,53,75,83,98,105,106,115,116,121,125,127,130,],[7,11,18,31,37,44,50,50,74,80,74,44,50,50,44,44,50,7,44,80,50,7,]),'multOperator':([57,88,112,],[86,86,86,]),'varDecl':([10,],[16,]),'typeDefinition':([33,75,105,106,121,],[41,103,119,120,126,]),'identList_2':([52,125,],[79,129,]),'constDecl':([5,],[10,]),'condition':([48,71,],[68,100,]),'constAssignmentList':([9,],[14,]),'term':([48,58,65,71,95,96,99,],[57,57,88,57,57,112,57,]),'identList':([17,52,125,],[23,78,78,]),'parameterList':([51,53,],[73,73,]),'expression':([48,58,71,95,99,],[66,87,66,111,114,]),'block':([4,116,130,],[8,124,132,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON block POINT','program',5,'p_program','uSintatico.py',45),
  ('block -> labelDecl constDecl varDecl BEGIN procDecl functDecl statement END','block',8,'p_block','uSintatico.py',53),
  ('labelDecl -> LABEL NUMBER SEMICOLON','labelDecl',3,'p_labelDecl','uSintatico.py',59),
  ('labelDecl -> empty','labelDecl',1,'p_labelDeclEmpty','uSintatico.py',63),
  ('constDecl -> empty','constDecl',1,'p_constDeclEmpty','uSintatico.py',69),
  ('constDecl -> CONST constAssignmentList SEMICOLON','constDecl',3,'p_constDecl','uSintatico.py',73),
  ('constAssignmentList -> ID EQ INTEGER','constAssignmentList',3,'p_constAssignmentList_1','uSintatico.py',77),
  ('constAssignmentList -> ID EQ REAL','constAssignmentList',3,'p_constAssignmentList_2','uSintatico.py',81),
  ('constAssignmentList -> ID EQ STRING','constAssignmentList',3,'p_constAssignmentList_3','uSintatico.py',85),
  ('constAssignmentList -> ID EQ NUMBER','constAssignmentList',3,'p_constAssignmentList_4','uSintatico.py',89),
  ('constAssignmentList -> ID EQ BOOLEAN','constAssignmentList',3,'p_constAssignmentList_5','uSintatico.py',93),
  ('typeDefinition -> empty','typeDefinition',1,'p_typeDefinitionEmpty','uSintatico.py',99),
  ('typeDefinition -> INTEGER','typeDefinition',1,'p_typeDefinition_1','uSintatico.py',103),
  ('typeDefinition -> REAL','typeDefinition',1,'p_typeDefinition_2','uSintatico.py',107),
  ('typeDefinition -> STRING','typeDefinition',1,'p_typeDefinition_3','uSintatico.py',111),
  ('typeDefinition -> BOOLEAN','typeDefinition',1,'p_typeDefinition_4','uSintatico.py',115),
  ('varDecl -> empty','varDecl',1,'p_varDeclEmpty','uSintatico.py',121),
  ('varDecl -> VAR identList COLON typeDefinition SEMICOLON identList_2','varDecl',6,'p_varDecl','uSintatico.py',125),
  ('identList -> ID','identList',1,'p_identList_1','uSintatico.py',129),
  ('identList -> identList COMMA ID','identList',3,'p_identList_2','uSintatico.py',133),
  ('identList_2 -> empty','identList_2',1,'p_identList_3','uSintatico.py',137),
  ('identList_2 -> identList COLON typeDefinition SEMICOLON identList_2','identList_2',5,'p_identList_4','uSintatico.py',141),
  ('procDecl -> PROCEDURE ID LPAREN parameters RPAREN SEMICOLON block SEMICOLON','procDecl',8,'p_procDecl1','uSintatico.py',147),
  ('procDecl -> empty','procDecl',1,'p_procDeclEmpty','uSintatico.py',151),
  ('functDecl -> empty','functDecl',1,'p_functDeclEmpty','uSintatico.py',157),
  ('functDecl -> FUNCTION ID LPAREN parameters RPAREN COLON typeDefinition SEMICOLON block SEMICOLON','functDecl',10,'p_functDecl1','uSintatico.py',161),
  ('parameterList -> empty','parameterList',1,'p_parametersEmpty','uSintatico.py',166),
  ('parameters -> parameterList','parameters',1,'p_parameters','uSintatico.py',170),
  ('parameterList -> parameterList SEMICOLON parameter','parameterList',3,'p_parameterList_1','uSintatico.py',174),
  ('parameterList -> parameter','parameterList',1,'p_parameterList_2','uSintatico.py',178),
  ('parameter -> ID COLON typeDefinition','parameter',3,'p_parameter_1','uSintatico.py',182),
  ('parameter -> ID COMMA parameter','parameter',3,'p_parameter_2','uSintatico.py',186),
  ('parameter -> COLON typeDefinition','parameter',2,'p_parameter_3','uSintatico.py',190),
  ('statement -> empty','statement',1,'p_statementEmpty','uSintatico.py',195),
  ('statement -> statement ID EQUALS expression SEMICOLON','statement',5,'p_statement_1','uSintatico.py',199),
  ('statement -> BEGIN statementList END','statement',3,'p_statement_2','uSintatico.py',203),
  ('statement -> statement IF condition THEN statement','statement',5,'p_statement_3','uSintatico.py',207),
  ('statement -> statement IF condition THEN statement ELSE statement','statement',7,'p_statement_4','uSintatico.py',211),
  ('statement -> WHILE condition DO statement','statement',4,'p_statement_5','uSintatico.py',215),
  ('statementList -> statement','statementList',1,'p_statementList_1','uSintatico.py',220),
  ('statementList -> statementList SEMICOLON statement','statementList',3,'p_statementList_2','uSintatico.py',224),
  ('condition -> expression relation expression','condition',3,'p_condition','uSintatico.py',229),
  ('relation -> EQUALS','relation',1,'p_relation_1','uSintatico.py',234),
  ('relation -> LT','relation',1,'p_relation_2','uSintatico.py',238),
  ('relation -> LE','relation',1,'p_relation_3','uSintatico.py',242),
  ('relation -> GT','relation',1,'p_relation_4','uSintatico.py',246),
  ('relation -> GE','relation',1,'p_relation_5','uSintatico.py',250),
  ('relation -> EQ','relation',1,'p_relation_6','uSintatico.py',254),
  ('relation -> NEQ','relation',1,'p_relation_7','uSintatico.py',258),
  ('expression -> term','expression',1,'p_expression_1','uSintatico.py',263),
  ('expression -> addOperator term','expression',2,'p_expression_2','uSintatico.py',267),
  ('expression -> expression addOperator term','expression',3,'p_expression_3','uSintatico.py',271),
  ('addOperator -> PLUS','addOperator',1,'p_addOperator_1','uSintatico.py',275),
  ('addOperator -> MINUS','addOperator',1,'p_addOperator_2','uSintatico.py',279),
  ('term -> factor','term',1,'p_term_1','uSintatico.py',283),
  ('term -> term multOperator factor','term',3,'p_term_2','uSintatico.py',287),
  ('multOperator -> TIMES','multOperator',1,'p_multOperator_1','uSintatico.py',291),
  ('multOperator -> DIVIDE','multOperator',1,'p_multOperator_2','uSintatico.py',295),
  ('factor -> ID','factor',1,'p_factor_1','uSintatico.py',299),
  ('factor -> REAL','factor',1,'p_factor_2','uSintatico.py',303),
  ('factor -> INTEGER','factor',1,'p_factor_3','uSintatico.py',307),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_4','uSintatico.py',311),
  ('factor -> NUMBER','factor',1,'p_factor_5','uSintatico.py',315),
  ('factor -> BOOLEAN','factor',1,'p_factor_6','uSintatico.py',319),
  ('empty -> <empty>','empty',0,'p_empty','uSintatico.py',323),
]
